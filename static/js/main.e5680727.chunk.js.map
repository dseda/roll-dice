{"version":3,"sources":["Die.js","RollDice.js","App.js","reportWebVitals.js","index.js"],"names":["Die","className","this","props","face","Component","RollDice","state","face1","roll","face2","num","Math","floor","random","console","log","faces","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAGMA,E,4JACJ,WACE,OAAO,mBAAGC,UAAS,sBAAiBC,KAAKC,MAAMC,KAA5B,c,GAFLC,aAMHL,ICNTM,E,kDAKJ,WAAYH,GAAQ,IAAD,8BACjB,cAAMA,IACDI,MAAQ,CACXC,MAAO,EAAKC,OACZC,MAAO,EAAKD,QAJG,E,wCASnB,WACE,IAAIE,EAAMC,KAAKC,MAAsB,EAAhBD,KAAKE,UAE1B,OADAC,QAAQC,IAAIL,GACRA,EACKT,KAAKC,MAAMc,MAAMN,GAEjBT,KAAKC,MAAMC,O,oBAGtB,WACE,OACE,gCACE,cAAC,EAAD,CAAKA,KAAMF,KAAKK,MAAMC,QACtB,cAAC,EAAD,CAAKJ,KAAMF,KAAKK,MAAMG,e,GA3BPL,aAAjBC,EACGY,aAAe,CACpBd,KAAM,OACNa,MAAO,CAAC,MAAO,MAAO,QAAS,OAAQ,OAAQ,QA8BpCX,QCvBAa,MAVf,WAGE,OACE,8BACE,cAAC,EAAD,OCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e5680727.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Die.css\";\n\nclass Die extends Component {\n  render() {\n    return <i className={`fas fa-dice-${this.props.face} die`}></i>;\n  }\n}\n\nexport default Die;\n","import React, { Component } from \"react\";\nimport Die from \"./Die\";\n\nclass RollDice extends Component {\n  static defaultProps = {\n    face: \"four\",\n    faces: [\"one\", \"two\", \"three\", \"four\", \"five\", \"six\"],\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      face1: this.roll(),\n      face2: this.roll(),\n    };\n    // this.roll = this.roll.bind(this);\n  }\n\n  roll() {\n    let num = Math.floor(Math.random() * 6);\n    console.log(num);\n    if (num) {\n      return this.props.faces[num];\n    } else {\n      return this.props.face;\n    }\n  }\n  render() {\n    return (\n      <div>\n        <Die face={this.state.face1} />\n        <Die face={this.state.face2} />\n      </div>\n    );\n  }\n}\n\nexport default RollDice;\n","import \"./App.css\";\nimport Die from \"./Die\";\nimport RollDice from \"./RollDice\";\nfunction App() {\n  // let rand1 = Math.floor(Math.random() * 6 + 1);\n  // let rand2 = Math.floor(Math.random() * 6 + 1);\n  return (\n    <div>\n      <RollDice />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}